<?php

namespace TimurFlush\Queue\Tests;

use PHPUnit\Framework\TestCase;
use TimurFlush\Queue\JobInterface;
use TimurFlush\Queue\Message;
use Mockery as m;

class MessageOverloadingTest extends TestCase
{
    /**
     * @var \TimurFlush\Queue\MessageInterface
     */
    protected $message = null;

    public function setUp()/* The :void return type declaration that should be here would cause a BC issue */
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->message = new Message('someText');
    }

    public function testToString()
    {
        $this->assertEquals('someText', $this->message, '__toString() is not working.');
    }

    public function testSetState()
    {
        eval('$b = ' . var_export($this->message, true) . ';');

        $this->assertEquals($b, $this->message, '__toString() is not working.');
    }

    public function tearDown()/* The :void return type declaration that should be here would cause a BC issue */
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        unset($this->message);
    }
}
